<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="biz.llmall.commodity.model.mapper.UserMapper">
	<resultMap id="UserBaseResultMap" type="biz.llmall.common.entity.user.User">
		<id column="id" jdbcType="BIGINT" property="id"/>
		<result column="group_id" jdbcType="BIGINT" property="groupId"/>
		<result column="nickname" jdbcType="VARCHAR" property="nickname"/>
		<result column="email" jdbcType="VARCHAR" property="email"/>
		<result column="mobile" jdbcType="VARCHAR" property="mobile"/>
		<result column="password" jdbcType="VARCHAR" property="password"/>
		<result column="salt" jdbcType="VARCHAR" property="salt"/>
		<result column="enable" jdbcType="BIT" property="enable"/>
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
	</resultMap>
	<sql id="User_Base_Column_List">
		id, group_id, nickname, email, mobile, password, salt, enable, create_time, update_time
	</sql>
	<sql id="Group_Base_Column_List">

	</sql>
	<select id="selectUserByPrimaryKey" parameterType="java.lang.Long" resultMap="UserBaseResultMap">
		select
		<include refid="User_Base_Column_List"/>
		from user
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from user
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="biz.llmall.common.entity.user.User">
		insert into user (id, group_id, nickname,
		email, mobile, password,
		salt, enable, create_time,
		update_time)
		values (#{id,jdbcType=BIGINT}, #{groupId,jdbcType=BIGINT}, #{nickname,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
		#{salt,jdbcType=VARCHAR}, #{enable,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP})
	</insert>
	<update id="updateByPrimaryKey" parameterType="biz.llmall.common.entity.user.User">
		update user
		set group_id = #{groupId,jdbcType=BIGINT},
		nickname = #{nickname,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		mobile = #{mobile,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		salt = #{salt,jdbcType=VARCHAR},
		enable = #{enable,jdbcType=BIT},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		update_time = #{updateTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=BIGINT}
	</update>
</mapper>