<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.g2link.web.stream.model.mapper.BillingMonthBillMapper">
    <resultMap id="BaseResultMap" type="cn.g2link.bms.common.model.entity.bill.BillingMonthBill">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="warehouse_code" jdbcType="VARCHAR" property="warehouseCode"/>
        <result column="warehouse_name" jdbcType="VARCHAR" property="warehouseName"/>
        <result column="owner_code" jdbcType="VARCHAR" property="ownerCode"/>
        <result column="owner_name" jdbcType="VARCHAR" property="ownerName"/>
        <result column="order_code" jdbcType="VARCHAR" property="orderCode"/>
        <result column="bill_time" jdbcType="TIMESTAMP" property="billTime"/>
        <result column="bill_type" jdbcType="VARCHAR" property="billType"/>
        <result column="bill_item" jdbcType="VARCHAR" property="billItem"/>
        <result column="actual_payment" jdbcType="DECIMAL" property="actualPayment"/>
        <result column="sub_actual_payment" jdbcType="DECIMAL" property="subActualPayment"/>
        <result column="unit_nums" jdbcType="DECIMAL" property="unitNums"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,  warehouse_code, warehouse_name, owner_code, owner_name, order_code, UNIX_TIMESTAMP(bill_time) * 1000 AS bill_time,
        bill_type, bill_item, actual_payment, sub_actual_payment, unit_nums
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
          <include refid="Base_Column_List"/>
        FROM billing_month_bill
        WHERE id = #{id,jdbcType=BIGINT}
    </select>

    <insert id="insert" parameterType="cn.g2link.bms.common.model.entity.bill.BillingMonthBill">
        insert into billing_month_bill (
            warehouse_code, warehouse_name,
            owner_code, owner_name, order_code,
            bill_time, bill_type, bill_item,
            actual_payment, sub_actual_payment, unit_nums)
        values (#{warehouseCode,jdbcType=VARCHAR}, #{warehouseName,jdbcType=VARCHAR},
            #{ownerCode,jdbcType=VARCHAR}, #{ownerName,jdbcType=VARCHAR}, #{orderCode,jdbcType=VARCHAR},
            FROM_UNIXTIME(#{billTime,jdbcType=TIMESTAMP}/1000), #{billType,jdbcType=VARCHAR}, #{billItem,jdbcType=VARCHAR},
            #{actualPayment,jdbcType=DECIMAL}, #{subActualPayment, jdbcType=DECIMAL}, #{unitNums, jdbcType=DECIMAL})
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="cn.g2link.bms.common.model.entity.bill.BillingMonthBill">
        update billing_month_bill
        <set>
            <if test="warehouseCode != null">
                warehouse_code = #{warehouseCode,jdbcType=VARCHAR},
            </if>
            <if test="warehouseName != null">
                warehouse_name = #{warehouseName,jdbcType=VARCHAR},
            </if>
            <if test="ownerCode != null">
                owner_code = #{ownerCode,jdbcType=VARCHAR},
            </if>
            <if test="ownerName != null">
                owner_name = #{ownerName,jdbcType=VARCHAR},
            </if>
            <if test="orderCode != null">
                order_code = #{orderCode,jdbcType=VARCHAR},
            </if>
            <if test="billTime != null">
                bill_time = #{billTime,jdbcType=TIMESTAMP},
            </if>
            <if test="billType != null">
                bill_type = #{billType,jdbcType=VARCHAR},
            </if>
            <if test="billItem != null">
                bill_item = #{billItem,jdbcType=VARCHAR},
            </if>
            <if test="actualPayment != null">
                actual_payment = #{actualPayment,jdbcType=DECIMAL},
            </if>
            <if test="subActualPayment != null">
                sub_actual_payment = #{subActualPayment,jdbcType=DECIMAL},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="cn.g2link.bms.common.model.entity.bill.BillingMonthBill">
    update billing_month_bill
    set warehouse_code = #{warehouseCode,jdbcType=VARCHAR},
        warehouse_name = #{warehouseName,jdbcType=VARCHAR},
        owner_code = #{ownerCode,jdbcType=VARCHAR},
        owner_name = #{ownerName,jdbcType=VARCHAR},
        order_code = #{orderCode,jdbcType=VARCHAR},
        bill_time = FROM_UNIXTIME(#{billTime,jdbcType=TIMESTAMP}/1000),
        bill_type = #{billType,jdbcType=VARCHAR},
        bill_item = #{billItem,jdbcType=VARCHAR},
        actual_payment = #{actualPayment,jdbcType=DECIMAL},
        sub_actual_payment = #{subActualPayment,jdbcType=DECIMAL},
        unit_nums = #{unitNums,jdbcType=DECIMAL},
        create_time = CURRENT_TIMESTAMP
    where id = #{id,jdbcType=BIGINT}
    </update>

    <!-- 更新 actualPayment和subActualPayment且累加unit_nums-->
    <update id="updateActualPayment" parameterType="BillingMonthBill">
        UPDATE billing_month_bill t1
        SET t1.actual_payment = #{actualPayment,jdbcType=DECIMAL},
        t1.sub_actual_payment = #{subActualPayment,jdbcType=DECIMAL},
        t1.unit_nums = #{unitNums,jdbcType=DECIMAL},
        t1.bill_time = FROM_UNIXTIME(#{billTime,jdbcType=TIMESTAMP}/1000),
        t1.update_time = CURRENT_TIMESTAMP
        WHERE t1.id = #{id,jdbcType=BIGINT}
    </update>

    <select id="findMonthBillCount" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM billing_month_bill t1
        WHERE 1=1
        AND t1.warehouse_code = #{warehouseCode}
        AND t1.bill_item IN
        <foreach item="item" index="index" collection="billItem" open="(" separator="," close=")">
            #{item}
        </foreach>

        <choose>
            <when test="period == 1">
                AND DATE_FORMAT(t1.bill_time, '%Y-%m-%d %H') = DATE_FORMAT(FROM_UNIXTIME(#{billTime}/1000), '%Y-%m-%d %H')
            </when>
            <when test="period == 2">
                AND DATE_FORMAT(t1.bill_time, '%Y-%m-%d') = DATE_FORMAT(FROM_UNIXTIME(#{billTime}/1000), '%Y-%m-%d')
            </when>

            <when test="period == 3">
                AND DATE_FORMAT(t1.bill_time, '%Y-%m') = DATE_FORMAT(FROM_UNIXTIME(#{billTime}/1000), '%Y-%m')
            </when>

            <when test="period == 4">
                AND DATE_FORMAT(t1.bill_time, '%Y-%m-%V') = DATE_FORMAT(FROM_UNIXTIME(#{billTime}/1000), '%Y-%m-%V')
            </when>
        </choose>

        <choose>
            <when test="lat == 1">
                AND t1.owner_code = #{ownerCode}
            </when>
            <when test="lat == 2">
                AND t1.order_code = #{orderCode}
            </when>
            <when test="lat == 3">
                AND t1.owner_code = #{ownerCode}
                AND t1.order_code = #{orderCode}
            </when>
        </choose>

    </select>

    <select id="findMonthBillCountNoMinRule" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM billing_month_bill t1
        WHERE 1=1
        AND t1.warehouse_code = #{warehouseCode}
        AND t1.owner_code = #{ownerCode}
        AND t1.order_code = #{orderCode}
        AND DATE_FORMAT(t1.bill_time, '%Y-%m') = DATE_FORMAT(FROM_UNIXTIME(#{billTime}/1000), '%Y-%m')
        AND t1.bill_item = #{billItem}
    </select>

    <select id="sumFee" resultType="BillingFee">
        SELECT SUM(actual_payment) as oSumFee, SUM(sub_actual_payment) as wSumFee, t1.bill_type as billType
        FROM billing_month_bill AS t1
        WHERE 1=1
        AND t1.warehouse_code = #{warehouseCode}
        AND t1.owner_code = #{ownerCode}
        AND DATE_FORMAT(t1.bill_time, '%Y-%m') = DATE_FORMAT(FROM_UNIXTIME(#{billTime}/1000), '%Y-%m')
        GROUP BY t1.bill_type;
    </select>

    <select id="sumFeeForUnPayment" resultType="BigDecimal">
        SELECT
        SUM(t1.actual_payment) as sumUnpaymentActualPayment
        FROM `billing_month_bill` AS t1
        LEFT JOIN `billing_warehouse_owner` t2 ON t1.warehouse_code = t2.warehouse_code AND t1.owner_code = t2.owner_code
        WHERE 1=1
        AND DATE_FORMAT(t1.bill_time, '%Y-%m')  = #{yearMonth}
        AND t1.owner_code = #{ownerCode}
        AND t2.is_billing = '1'
    </select>

    <select id="getMonthDetail" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM billing_month_bill t1
        WHERE 1=1
        AND DATE_FORMAT(t1.bill_time, '%Y-%m') = #{yearMonth};
    </select>

    <select id="getMonthDetailForPayment" resultMap="BaseResultMap">
        SELECT
          <include refid="Base_Column_List"/>
        FROM billing_month_bill t1
        LEFT JOIN `billing_warehouse_owner` t2
        ON t1.warehouse_code = t2.warehouse_code AND t1.owner_code = t2.owner_code
        WHERE 1=1
        AND t1.is_pay = 0
        AND t2.is_billing = 1
        AND t2.business_type IN
        <foreach item="item" index="index" collection="needPaymentItems" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <update id="updateMonthDetailForPayment">
        UPDATE billing_month_bill t1
        SET t1.is_pay = #{isPay}, t1.pay_service_code = #{payServiceCode}, t1.update_time = CURRENT_TIMESTAMP
        WHERE 1=1
        AND t1.id = #{id}
    </update>

    <update id="resetBillExceptionData" parameterType="cn.g2link.bms.common.model.entity.bill.BillingDetailWithMinRule">
        UPDATE billing_month_bill t1
        SET
          t1.unit_nums = 0,
          t1.actual_payment = 0,
          t1.sub_actual_payment = 0,
          t1.update_time = CURRENT_TIMESTAMP
        WHERE 1=1
        AND t1.warehouse_code = #{detail.warehouseCode}
        AND t1.bill_type = #{detail.billType}
        AND t1.bill_item = #{detail.billItem}
        <choose>
            <when test="minRule != null">
                <choose>
                    <when test="minRule.period == 1">
                        AND DATE_FORMAT(t1.bill_time, '%Y-%m-%d %H') = DATE_FORMAT(FROM_UNIXTIME(#{detail.billTime}/1000), '%Y-%m-%d %H')
                    </when>
                    <when test="minRule.period == 2">
                        AND DATE_FORMAT(t1.bill_time, '%Y-%m-%d') = DATE_FORMAT(FROM_UNIXTIME(#{detail.billTime}/1000), '%Y-%m-%d')
                    </when>

                    <when test="minRule.period == 3">
                        AND DATE_FORMAT(t1.bill_time, '%Y-%m') = DATE_FORMAT(FROM_UNIXTIME(#{detail.billTime}/1000), '%Y-%m')
                    </when>

                    <when test="minRule.period == 4">
                        AND DATE_FORMAT(t1.bill_time, '%Y-%m-%V') = DATE_FORMAT(FROM_UNIXTIME(#{detail.billTime}/1000), '%Y-%m-%V')
                    </when>
                </choose>

                <choose>
                    <when test="minRule.lat == 1">
                        AND t1.owner_code = #{detail.ownerCode}
                    </when>
                    <when test="minRule.lat == 2">
                        AND t1.order_code = #{detail.orderCode}
                    </when>
                    <when test="minRule.lat == 3">
                        AND t1.owner_code = #{detail.ownerCode}
                        AND t1.order_code = #{detail.orderCode}
                    </when>
                </choose>
            </when>

            <otherwise>
                AND t1.owner_code = #{detail.ownerCode}
                AND t1.order_code = #{detail.orderCode}
                AND t1.bill_time = #{detail.billTime}
            </otherwise>
        </choose>
    </update>
</mapper>